{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTab","selectedTabId","onTabSelected","tabId","find","tab","id","className","map","cn","onClick","handleTabSelecting","href","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEIC,EAAQF,EAEPF,EAAKK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,OACjCE,EAAQ,SASV,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWE,IAAG,CAAE,YAAaJ,EAAIC,KAAOH,IACxC,UAAQ,MAHV,SAKE,mBACEO,QAAS,YAjBI,SAACL,GACtBA,EAAIC,KAAOH,GACbD,EAAcG,GAgBFM,CAAmBN,IAErBO,KAAI,WAAMP,EAAIC,IACd,UAAQ,UALV,SAOGD,EAAIQ,SAXFR,EAAIC,WAkBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGP,EAAYc,cC9CRf,EAAO,CAClB,CAAEO,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOf,EAAP,KAAsBgB,EAAtB,KAEMjB,EAAcD,EAAKK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBF,EAAK,GAMzE,OACE,sBAAKQ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAA0CP,EAAYa,SAEtD,cAAC,EAAD,CACEd,KAAMA,EACNC,YAAaA,EACbC,cAAeA,EACfC,cAZqB,SAACG,GAC1BY,EAAiBZ,EAAIC,WChBzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3246ccc0.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTab: Tab;\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTab,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  let tabId = selectedTabId;\n\n  if (!tabs.find((tab) => tab.id === selectedTabId)) {\n    tabId = 'tab-1';\n  }\n\n  const handleTabSelecting = (tab: Tab) => {\n    if (tab.id !== tabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={cn({ 'is-active': tab.id === tabId })}\n              data-cy=\"Tab\"\n            >\n              <a\n                onClick={() => {\n                  handleTabSelecting(tab);\n                }}\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-4');\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  const handleTabSelecting = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${selectedTab.title}`}</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTab={selectedTab}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelecting}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}