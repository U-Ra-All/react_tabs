{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","t","id","className","map","cn","onClick","href","title","content","App","useState","setSelectedTabId","tab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAGMC,EADMH,EAAKI,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOL,MACZD,EAAK,GAE/B,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWE,IAAG,CAAE,YAAaJ,EAAEC,KAAOH,EAAWG,KACjD,UAAQ,MAHV,SAKE,mBACEI,QAAS,WACHL,EAAEC,KAAOL,GACXC,EAAcG,IAGlBM,KAAI,WAAMN,EAAEC,IACZ,UAAQ,UAPV,SASGD,EAAEO,SAbAP,EAAEC,WAoBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAWU,cCrCPb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAS,SAAnD,mBAAOd,EAAP,KAAsBe,EAAtB,KAMA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CAEIP,EAAKI,MAAK,SAACa,GAAD,OAASA,EAAIX,KAAOL,YAFlC,aAEI,EAA8CW,SAIlD,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAfqB,SAACe,GAC1BD,EAAiBC,EAAIX,WCdzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cd7dc857.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const tab = tabs.find((t) => t.id === selectedTabId);\n  const currentTab = tab || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((t) => (\n            <li\n              key={t.id}\n              className={cn({ 'is-active': t.id === currentTab.id })}\n              data-cy=\"Tab\"\n            >\n              <a\n                onClick={() => {\n                  if (t.id !== selectedTabId) {\n                    onTabSelected(t);\n                  }\n                }}\n                href={`#${t.id}`}\n                data-cy=\"TabLink\"\n              >\n                {t.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const handleTabSelecting = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${\n          tabs.find((tab) => tab.id === selectedTabId)?.title\n        }`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelecting}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}