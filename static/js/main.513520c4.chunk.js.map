{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","handleTabSelecting","tab","id","className","map","cn","onClick","href","title","find","content","App","useState","setSelectedTabId","isSelectedTabIdCorrect","includes","currentTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAqB,SAACC,GAAD,OAAc,WACnCA,EAAIC,KAAOJ,GACbC,EAAcE,KAIlB,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKE,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWE,IAAG,CAAE,YAAaJ,EAAIC,KAAOJ,IACxC,UAAQ,MAHV,SAKE,mBACEQ,QAASN,EAAmBC,GAC5BM,KAAI,WAAMN,EAAIC,IACd,UAAQ,UAHV,SAKGD,EAAIO,SATFP,EAAIC,WAgBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,mBACGN,EAAKY,MAAK,SAACR,GAAD,OAASA,EAAIC,KAAOJ,YADjC,aACG,EAA8CY,cCpC1Cb,EAAO,CAClB,CAAEK,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOd,EAAP,KAAsBe,EAAtB,KAEMC,EAAyBjB,EAC5BO,KAAI,SAACH,GAAD,OAASA,EAAIC,MACjBa,SAASjB,GAENkB,EAAaF,EACfjB,EAAKY,MAAK,SAACR,GAAD,OAASA,EAAIC,KAAOJ,KAC9BD,EAAK,GAMT,OACE,sBAAKM,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CAA0Ca,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAYR,SAEtD,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAegB,EAAyBhB,EAAgBD,EAAK,GAAGK,GAChEH,cAXqB,SAACE,GAC1BY,EAAiBZ,EAAIC,WCtBzBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.513520c4.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const handleTabSelecting = (tab: Tab) => () => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={cn({ 'is-active': tab.id === selectedTabId })}\n              data-cy=\"Tab\"\n            >\n              <a\n                onClick={handleTabSelecting(tab)}\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find((tab) => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const isSelectedTabIdCorrect = tabs\n    .map((tab) => tab.id)\n    .includes(selectedTabId);\n\n  const currentTab = isSelectedTabIdCorrect\n    ? tabs.find((tab) => tab.id === selectedTabId)\n    : tabs[0];\n\n  const handleTabSelecting = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${currentTab?.title}`}</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={isSelectedTabIdCorrect ? selectedTabId : tabs[0].id}\n        onTabSelected={handleTabSelecting}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}